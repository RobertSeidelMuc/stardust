{"version":3,"sources":["components/Game/Star/Star.jsx","components/Game/Game.jsx","components/MainMenu/MainMenu.jsx","index.jsx","assets/graphics/background-large.jpg","assets/sounds/background_music_solace.mp3"],"names":["Star","props","diameter","screenHeight","glowRadius","positionLeft","gridWidth","starData","x","column","positionTop","gridHeight","y","row","className","onMouseOver","showTooltip","show","setShowTooltip","onMouseLeave","style","backgroundColor","boxShadow","type","highlight","shadow","width","height","position","top","left","cursor","Game","ref","useRef","useState","setScreenHeight","screenWidth","setScreenWidth","setGridWidth","setGridHeight","stars","setStars","grid","useEffect","handleResize","current","newScreenWidth","clientWidth","newScreenHeight","window","addEventListener","removeEventListener","randomize","min","max","Math","floor","random","starTypes","category","starNames","array","i","length","j","shuffleArray","newStars","index","r","c","newType","newStar","name","push","s","offset","id","noBackground","animate","map","star","key","corners","level","right","bottom","zIndex","whiteSpace","margin","ButtonFrame","children","mouseOver","setMouseOver","layer","onMouseEnter","MainMenu","m","l","to","Frame","mySounds","players","background","sound","src","backgroundMusic","loop","settings","Player","withSounds","sounds","play","Fragment","App","theme","createTheme","createSounds","backgroundImage","path","ReactDOM","render","document","querySelector","module","exports"],"mappings":"+MAEe,SAASA,EAAKC,GAC3B,IACMC,EAAWD,EAAME,aADA,GAEjBC,EAAaF,EAAW,EACxBG,EACc,IAAlBJ,EAAMK,WACc,GAAlBL,EAAMK,UAAkBJ,GAAY,IAAOD,EAAMM,SAASC,EAC5DP,EAAMK,UAAYL,EAAMM,SAASE,OAC7BC,EACe,IAAnBT,EAAMU,YACe,GAAnBV,EAAMU,WAAmBT,GAAY,IAAOD,EAAMM,SAASK,EAC7DX,EAAMU,WAAaV,EAAMM,SAASM,IAEpC,OACE,oCACE,yBACEC,UAAU,OACVC,YAAa,WACNd,EAAMe,YAAYC,MACrBhB,EAAMiB,eAAe,CACnBD,MAAM,EACNf,SAAUA,EACVK,SAAUN,EAAMM,SAChBF,aAAcA,EACdK,YAAaA,KAInBS,aAAc,WACRlB,EAAMe,YAAYC,MACpBhB,EAAMiB,eAAe,CACnBD,MAAM,EACNf,SAAU,EACVK,SAAU,GACVF,aAAc,EACdK,YAAa,KAInBU,MAAO,CACLC,gBAAiB,QACjBC,UAAU,aAAD,OACPlB,EAAa,EADN,6CAE4BA,EAAa,EAFzC,gBAGM,EAAbA,EAHO,cAKPH,EAAMM,SAASgB,KAAKC,UALb,gDAM+BpB,EAAa,EAN5C,gBAOM,GAAbA,EAPO,cASPH,EAAMM,SAASgB,KAAKE,OATb,mDAUkCrB,EAAa,EAV/C,gBAWM,EAAbA,EAXO,cAaPH,EAAMM,SAASgB,KAAKC,UAbb,8CAePpB,EAAa,EAfN,uCAgBsBA,EAAa,EAhBnC,gBAgB4CA,EAhB5C,cAiBPH,EAAMM,SAASgB,KAAKE,OAjBb,sCAkBqBrB,EAAa,EAlBlC,gBAkB2CA,EAlB3C,cAmBPH,EAAMM,SAASgB,KAAKC,UAnBb,2BAqBTE,MAAOxB,EACPyB,OAAQzB,EACR0B,SAAU,WACVC,IAAI,GAAD,OAAKnB,EAAL,MACHoB,KAAK,GAAD,OAAKzB,EAAL,MACJ0B,OAAQ,YAGV,yBAAKjB,UAAU,kBCnER,SAASkB,IACtB,IAAMC,EAAMC,iBAAO,MADU,EAEWC,mBAAS,GAFpB,mBAEtBhC,EAFsB,KAERiC,EAFQ,OAGSD,mBAAS,GAHlB,mBAGtBE,EAHsB,KAGTC,EAHS,OAIKH,mBAAS,GAJd,mBAItB7B,EAJsB,KAIXiC,EAJW,OAKOJ,mBAAS,GALhB,mBAKtBxB,EALsB,KAKV6B,EALU,OAMHL,mBAAS,IANN,mBAMtBM,EANsB,KAMfC,EANe,KAOvBC,EAAkB,EAAlBA,EAA2B,EAPJ,EAQSR,mBAAS,CAC7ClB,MAAM,EACNV,SAAU,GACVL,SAAU,EACVG,aAAc,EACdK,YAAa,IAbc,mBAQtBM,EARsB,KAQTE,EARS,KA0I7B,OA1HA0B,qBAAU,WACR,SAASC,IACP,GAAIZ,EAAIa,QAAS,CACf,IAAMC,EAAiBd,EAAIa,QAAQE,YAC7BC,EAAmBhB,EAAIa,QAAQE,YAAc,EAAK,EACxDV,EAAeS,GACfX,EAAgBa,GAChBT,EAAcS,EAAkBN,GAChCJ,EAAaQ,EAAiBJ,IAMlC,OAFAE,IACAK,OAAOC,iBAAiB,SAAUN,GAC3B,WACLK,OAAOE,oBAAoB,SAAUP,MAEtC,CAACF,EAAcA,IAElBC,qBAAU,WAER,SAASS,EAAUC,EAAKC,GACtB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAAQA,EAGnD,IAAMK,EAAY,CAChB,CAAEC,SAAU,OAAQpC,UAAW,OAAQC,OAAQ,QAC/C,CAAEmC,SAAU,QAASpC,UAAW,UAAWC,OAAQ,QACnD,CAAEmC,SAAU,MAAOpC,UAAW,UAAWC,OAAQ,WACjD,CAAEmC,SAAU,QAASpC,UAAW,UAAWC,OAAQ,QACnD,CAAEmC,SAAU,SAAUpC,UAAW,UAAWC,OAAQ,SAGhDoC,EAAY,CAChB,YACA,cACA,SACA,gBACA,gBACA,oBACA,kBACA,eACA,QACA,gBACA,WACA,oBACA,cACA,YACA,gBACA,gBACA,gBACA,cACA,iBACA,iBACA,cACA,kBACA,WACA,YACA,SACA,UACA,iBACA,aACA,cACA,SACA,YACA,mBACA,kBACA,gBACA,OACA,YACA,iBAGF,SAAsBC,GACpB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIT,KAAKC,MAAMD,KAAKE,UAAYK,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,MAM7CC,CAAaL,GAMb,IAJA,IAAMM,EAAW,GAEbC,EAAQ,EAEHC,EAAI,EAAGA,EAAI1B,EAAW0B,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAI3B,EAAc2B,IAAK,CACrC,IAAMC,EAAUZ,EAAUN,EAAU,EAAGM,EAAUK,SAE3CQ,EAAU,CACd3D,IAAKwD,EACL5D,OAAQ6D,EACR9D,EAAG6C,EAAU,EAAG,KAChBzC,EAAGyC,EAAU,EAAG,KAChB9B,KAAMgD,EACNE,KAAMZ,EAAUO,IAElBD,EAASO,KAAKF,GACdJ,IAIJ1B,EAASyB,KACR,CAACxB,EAAWA,IAmBb,oCACE,kBAAC,MAAD,KACE,kBAAC,MAAD,CAAKgC,EAAG,EAAGC,OAAQ,CAAC,MAAOC,GAAG,gBAC5B,kBAAC,QAAD,CAAO/D,UAAU,aAAagE,cAAY,EAACC,SAAO,GAChD,kBAAC,QAAD,KACE,yBACE9C,IAAKA,EACLb,MAAO,CACLM,MAAO,OACPC,OAAO,GAAD,OAAKxB,EAAL,QAzBFsC,EAAMuC,KAAI,SAACC,GAAD,OAC1B,kBAACjF,EAAD,CACEO,SAAU0E,EACVC,IAAG,kBAAaD,EAAKpE,IAAlB,kBAA+BoE,EAAKxE,QACvCN,aAAcA,EACdG,UAAWA,EACXK,WAAYA,EACZK,YAAaA,EACbE,eAAgBA,QAqBc,IAArBF,EAAYC,MACX,kBAAC,QAAD,CACE8D,SAAO,EACPI,QAAS,EACTC,MAAO,EACPhE,MAAO,CACLQ,SAAU,WACVE,KACEd,EAAYT,SAASE,OAAS,GAAKkC,EAAe,GAAlD,UAEE3B,EAAYX,aAAsC,IAAvBW,EAAYd,SAFzC,MAIFmF,MACErE,EAAYT,SAASE,OAAS,EAAIkC,EAAe,GAAjD,UAEEN,EACArB,EAAYX,aACW,GAAvBW,EAAYd,SAJd,MAMF2B,IACEb,EAAYT,SAASM,IAAM,GAAK8B,EAAY,GAA5C,UACG3B,EAAYN,YADf,MAEF4E,OACEtE,EAAYT,SAASM,IAAM,EAAI8B,EAAY,GAA3C,UAEExC,EACAa,EAAYN,YACW,GAAvBM,EAAYd,SAJd,MAMFqF,OAAQ,MAGV,kBAAC,QAAD,CACER,SAAO,EACP3D,MAAO,CAAEoE,WAAY,SAAUC,OAAQ,UAEtCzE,EAAYT,SAASkE,aC5L5C,IAAMiB,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACFxD,oBAAS,GADP,mBAC7ByD,EAD6B,KAClBC,EADkB,KAEpC,OACE,kBAAC,QAAD,CACEV,QAAS,EACTJ,SAAS,EACTe,MAAOF,EAAY,UAAY,UAC/BG,aAAc,kBAAMF,GAAa,IACjC1E,aAAc,kBAAM0E,GAAa,KAEhCF,IAKQ,SAASK,IACtB,OACE,kBAAC,MAAD,KACE,kBAAC,MAAD,CAAKrB,EAAG,GAAIsB,EAAG,EAAGC,EAAG,EAAGtB,OAAQ,CAAC,KAAM,MAAO9D,UAAU,iBACtD,4BACE,kBAAC,QAAD,CAAOiE,SAAO,GAAd,aAEF,6BACE,kBAAC,IAAD,CAAMoB,GAAG,SACP,kBAAC,SAAD,CAAQC,MAAOV,EAAaX,SAAO,EAACjE,UAAU,UAA9C,wBAIF,kBAAC,IAAD,CAAMqF,GAAG,SACP,kBAAC,SAAD,CAAQC,MAAOV,EAAaX,SAAO,EAACjE,UAAU,UAA9C,gBAIF,kBAAC,IAAD,CAAMqF,GAAG,YACP,kBAAC,SAAD,CAAQC,MAAOV,EAAaX,SAAO,EAACjE,UAAU,UAA9C,e,6BCnBNuF,EAAW,CACfC,QAAS,CACPC,WAAY,CACVC,MAAO,CAAEC,IAAK,C,OAACC,GAAkBC,MAAM,GACvCC,SAAU,CAAED,MAAM,MAKlBE,EAASC,wBAAa,SAAC7G,GAK3B,OAJA2C,qBAAU,WACR3C,EAAM8G,OAAOR,WAAWS,SACvB,CAAC/G,EAAM8G,OAAOR,aAEV,kBAAC,IAAMU,SAAP,SAGT,SAASC,IACP,OACE,kBAAC,gBAAD,CAAeC,MAAOC,yBACpB,kBAAC,iBAAD,CAAgBL,OAAQM,uBAAahB,IACnC,kBAACQ,EAAD,MACA,kBAAC,QAAD,CAAON,WAAYe,KACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SACV,kBAACvF,EAAD,OAEF,kBAAC,IAAD,CAAOuF,KAAK,KACV,kBAACvB,EAAD,YAUhBwB,IAASC,OAAO,kBAACP,EAAD,MAASQ,SAASC,cAAc,W,mBC3DhDC,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,qD","file":"static/js/main.4206a8e2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Star(props) {\r\n  const starSizeFactor = 16;\r\n  const diameter = props.screenHeight / starSizeFactor;\r\n  const glowRadius = diameter / 3;\r\n  const positionLeft =\r\n    props.gridWidth * 0.05 +\r\n    ((props.gridWidth * 0.9 - diameter) / 100) * props.starData.x +\r\n    props.gridWidth * props.starData.column;\r\n  const positionTop =\r\n    props.gridHeight * 0.05 +\r\n    ((props.gridHeight * 0.9 - diameter) / 100) * props.starData.y +\r\n    props.gridHeight * props.starData.row;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"star\"\r\n        onMouseOver={() => {\r\n          if (!props.showTooltip.show) {\r\n            props.setShowTooltip({\r\n              show: true,\r\n              diameter: diameter,\r\n              starData: props.starData,\r\n              positionLeft: positionLeft,\r\n              positionTop: positionTop,\r\n            });\r\n          }\r\n        }}\r\n        onMouseLeave={() => {\r\n          if (props.showTooltip.show) {\r\n            props.setShowTooltip({\r\n              show: false,\r\n              diameter: 0,\r\n              starData: {},\r\n              positionLeft: 0,\r\n              positionTop: 0,\r\n            });\r\n          }\r\n        }}\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          boxShadow: `inset 0 0 ${\r\n            glowRadius / 2\r\n          }px #fff, /* inner white */ inset ${-glowRadius / 2}px 0 ${\r\n            glowRadius * 2\r\n          }px ${\r\n            props.starData.type.highlight\r\n          }, /* inner right cyan short */ inset ${glowRadius / 2}px 0 ${\r\n            glowRadius * 16\r\n          }px ${\r\n            props.starData.type.shadow\r\n          }, /* inner left magenta broad */ inset ${-glowRadius / 2}px 0 ${\r\n            glowRadius * 4\r\n          }px ${\r\n            props.starData.type.highlight\r\n          }, /* inner right cyan broad */ 0 0 ${\r\n            glowRadius / 2\r\n          }px #fff, /* outer white */ ${-glowRadius / 8}px 0 ${glowRadius}px ${\r\n            props.starData.type.shadow\r\n          }, /* outer left magenta */ ${glowRadius / 8}px 0 ${glowRadius}px ${\r\n            props.starData.type.highlight\r\n          } /* outer right cyan */`,\r\n          width: diameter,\r\n          height: diameter,\r\n          position: \"absolute\",\r\n          top: `${positionTop}px`,\r\n          left: `${positionLeft}px`,\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        <div className=\"starOverlay\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Col, Frame, Puffs, Row, Words } from \"arwes\";\r\n\r\nimport Star from \"./Star/Star\";\r\n\r\nexport default function Game() {\r\n  const ref = useRef(null);\r\n  const [screenHeight, setScreenHeight] = useState(0);\r\n  const [screenWidth, setScreenWidth] = useState(0);\r\n  const [gridWidth, setGridWidth] = useState(0);\r\n  const [gridHeight, setGridHeight] = useState(0);\r\n  const [stars, setStars] = useState([]);\r\n  const grid = { columns: 8, rows: 4 };\r\n  const [showTooltip, setShowTooltip] = useState({\r\n    show: false,\r\n    starData: {},\r\n    diameter: 0,\r\n    positionLeft: 0,\r\n    positionTop: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      if (ref.current) {\r\n        const newScreenWidth = ref.current.clientWidth;\r\n        const newScreenHeight = (ref.current.clientWidth / 5) * 3;\r\n        setScreenWidth(newScreenWidth);\r\n        setScreenHeight(newScreenHeight);\r\n        setGridHeight(newScreenHeight / grid.rows);\r\n        setGridWidth(newScreenWidth / grid.columns);\r\n      }\r\n    }\r\n\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [grid.columns, grid.rows]);\r\n\r\n  useEffect(() => {\r\n    //returns a random number between min (included) and max (excluded)\r\n    function randomize(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    const starTypes = [\r\n      { category: \"blue\", highlight: \"#0ff\", shadow: \"#f0f\" },\r\n      { category: \"green\", highlight: \"#85ff8d\", shadow: \"#0fb\" },\r\n      { category: \"red\", highlight: \"#ff7a7a\", shadow: \"#ffbb80\" },\r\n      { category: \"white\", highlight: \"#ccfffd\", shadow: \"#0fe\" },\r\n      { category: \"yellow\", highlight: \"#cdd47b\", shadow: \"#fa0\" },\r\n    ];\r\n\r\n    const starNames = [\r\n      \"Aldebaran\",\r\n      \"Alpha Hydri\",\r\n      \"Altair\",\r\n      \"Beta Pictoris\",\r\n      \"Canis Minoris\",\r\n      \"Canum Venaticorum\",\r\n      \"Comae Berenices\",\r\n      \"Chi Herculis\",\r\n      \"Cygni\",\r\n      \"Delta Equulei\",\r\n      \"Denebola\",\r\n      \"Epsilon Serpentis\",\r\n      \"Eta Scorpii\",\r\n      \"Fomalhaut\",\r\n      \"Gamma Tucanae\",\r\n      \"Iota Virginis\",\r\n      \"Kappe Doradus\",\r\n      \"Lambda Arae\",\r\n      \"Leonis Minoris\",\r\n      \"Mu Cassiopeiae\",\r\n      \"Nu Octantis\",\r\n      \"Omicron Aquilae\",\r\n      \"Ophiuchi\",\r\n      \"Pi Mensae\",\r\n      \"Pollux\",\r\n      \"Procyon\",\r\n      \"Psi Capricorni\",\r\n      \"Rho Puppis\",\r\n      \"Sigma Ursae\",\r\n      \"Sirius\",\r\n      \"Tau Cygni\",\r\n      \"Theta Sculptoris\",\r\n      \"Upsilon Aquarii\",\r\n      \"Ursae Majoris\",\r\n      \"Vega\",\r\n      \"Xi Pegasi\",\r\n      \"Zeta Leporis\",\r\n    ];\r\n\r\n    function shuffleArray(array) {\r\n      for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n      }\r\n    }\r\n\r\n    shuffleArray(starNames);\r\n\r\n    const newStars = [];\r\n\r\n    let index = 0;\r\n\r\n    for (let r = 0; r < grid.rows; r++) {\r\n      for (let c = 0; c < grid.columns; c++) {\r\n        const newType = starTypes[randomize(0, starTypes.length)];\r\n\r\n        const newStar = {\r\n          row: r,\r\n          column: c,\r\n          x: randomize(0, 100),\r\n          y: randomize(0, 100),\r\n          type: newType,\r\n          name: starNames[index],\r\n        };\r\n        newStars.push(newStar);\r\n        index++;\r\n      }\r\n    }\r\n\r\n    setStars(newStars);\r\n  }, [grid.rows, grid.columns]);\r\n\r\n  function renderStars() {\r\n    const starNodes = stars.map((star) => (\r\n      <Star\r\n        starData={star}\r\n        key={`star_row${star.row}_column${star.column}`}\r\n        screenHeight={screenHeight}\r\n        gridWidth={gridWidth}\r\n        gridHeight={gridHeight}\r\n        showTooltip={showTooltip}\r\n        setShowTooltip={setShowTooltip}\r\n      />\r\n    ));\r\n\r\n    return starNodes;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col s={9} offset={[\"s2\"]} id=\"centercolumn\">\r\n          <Frame className=\"mainscreen\" noBackground animate>\r\n            <Puffs>\r\n              <div\r\n                ref={ref}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: `${screenHeight}px`,\r\n                }}\r\n              >\r\n                {renderStars()}\r\n                {showTooltip.show === true && (\r\n                  <Frame\r\n                    animate\r\n                    corners={1}\r\n                    level={0}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      left:\r\n                        showTooltip.starData.column + 1 <= grid.columns / 2 &&\r\n                        `${\r\n                          showTooltip.positionLeft + showTooltip.diameter * 1.5\r\n                        }px`,\r\n                      right:\r\n                        showTooltip.starData.column + 1 > grid.columns / 2 &&\r\n                        `${\r\n                          screenWidth -\r\n                          showTooltip.positionLeft +\r\n                          showTooltip.diameter * 0.5\r\n                        }px`,\r\n                      top:\r\n                        showTooltip.starData.row + 1 <= grid.rows / 2 &&\r\n                        `${showTooltip.positionTop}px`,\r\n                      bottom:\r\n                        showTooltip.starData.row + 1 > grid.rows / 2 &&\r\n                        `${\r\n                          screenHeight -\r\n                          showTooltip.positionTop -\r\n                          showTooltip.diameter * 0.5\r\n                        }px`,\r\n                      zIndex: 100,\r\n                    }}\r\n                  >\r\n                    <Words\r\n                      animate\r\n                      style={{ whiteSpace: \"nowrap\", margin: \"0.5em\" }}\r\n                    >\r\n                      {showTooltip.starData.name}\r\n                    </Words>\r\n                  </Frame>\r\n                )}\r\n              </div>\r\n            </Puffs>\r\n          </Frame>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Row, Col, Words, Frame } from \"arwes\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ButtonFrame = ({ children }) => {\r\n  const [mouseOver, setMouseOver] = useState(false);\r\n  return (\r\n    <Frame\r\n      corners={1}\r\n      animate={true}\r\n      layer={mouseOver ? \"control\" : \"primary\"}\r\n      onMouseEnter={() => setMouseOver(true)}\r\n      onMouseLeave={() => setMouseOver(false)}\r\n    >\r\n      {children}\r\n    </Frame>\r\n  );\r\n};\r\n\r\nexport default function MainMenu() {\r\n  return (\r\n    <Row>\r\n      <Col s={12} m={8} l={6} offset={[\"m2\", \"l3\"]} className=\"centerContent\">\r\n        <h1>\r\n          <Words animate>Stardust</Words>\r\n        </h1>\r\n        <div>\r\n          <Link to=\"/game\">\r\n            <Button Frame={ButtonFrame} animate className=\"button\">\r\n              Neues Spiel starten\r\n            </Button>\r\n          </Link>\r\n          <Link to=\"/load\">\r\n            <Button Frame={ButtonFrame} animate className=\"button\">\r\n              Spiel laden\r\n            </Button>\r\n          </Link>\r\n          <Link to=\"/credits\">\r\n            <Button Frame={ButtonFrame} animate className=\"button\">\r\n              Credits\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  ThemeProvider,\n  createTheme,\n  SoundsProvider,\n  createSounds,\n  withSounds,\n  Arwes,\n} from \"arwes\";\nimport \"./index.css\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Game from \"./components/Game/Game\";\nimport MainMenu from \"./components/MainMenu/MainMenu\";\n\nimport backgroundImage from \"./assets/graphics/background-large.jpg\";\nimport backgroundMusic from \"./assets/sounds/background_music_solace.mp3\";\n\nconst mySounds = {\n  players: {\n    background: {\n      sound: { src: [backgroundMusic], loop: true },\n      settings: { loop: true },\n    },\n  },\n};\n\nconst Player = withSounds()((props) => {\n  useEffect(() => {\n    props.sounds.background.play();\n  }, [props.sounds.background]);\n\n  return <React.Fragment></React.Fragment>;\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={createTheme()}>\n      <SoundsProvider sounds={createSounds(mySounds)}>\n        <Player />\n        <Arwes background={backgroundImage}>\n          <Router>\n            <Switch>\n              <Route path=\"/game\">\n                <Game />\n              </Route>\n              <Route path=\"/\">\n                <MainMenu />\n              </Route>\n            </Switch>\n          </Router>\n        </Arwes>\n      </SoundsProvider>\n    </ThemeProvider>\n  );\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","module.exports = __webpack_public_path__ + \"static/media/background-large.d7fea702.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_music_solace.33304210.mp3\";"],"sourceRoot":""}